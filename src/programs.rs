use crate::processor::*;

pub fn load_program(input: &str) -> Vec<Instr> {
    match input {
        "testloads" => vec![
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Ld(2, Operand::Imm(300)),
            Instr::Ld(3, Operand::Imm(400)),
            Instr::Ld(4, Operand::Imm(500)),
            Instr::Ld(5, Operand::Imm(600)),
            Instr::Ld(6, Operand::Imm(700)),
            Instr::Ld(7, Operand::Imm(800)),
            // Instr::Add(2, Operand::Reg(0), Operand::Reg(1)),
            Instr::Halt(),
        ],

        "multest" => vec![
            Instr::Ld(0, Operand::Imm(100)),
            Instr::Ld(1, Operand::Imm(200)),
            Instr::Mul(2, Operand::Reg(0), Operand::Reg(1)),
            Instr::Ld(3, Operand::Reg(2)),
            Instr::Halt(),
        ],

        "branchtest" => vec![
            Instr::Ld(0, Operand::Imm(1000)),
            Instr::Sub(0, Operand::Reg(0), Operand::Imm(1)),
            Instr::Biez(4, 0),
            Instr::J(1),
            Instr::Halt(),
        ],

        _ => vec![],
    }
}
